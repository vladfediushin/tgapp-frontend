import React, { useEffect } from 'react'
import { useNavigate } from 'react-router-dom'
import { useSession } from '../store/session'
import { createUser, UserOut } from '../api/api'

// üîß –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ Vercel
function logToVercel(message: string) {
  fetch('/api/logs', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ message }),
  }).catch(err => {
    console.error('[LOG ERROR]', err)
  })
}

const Authorize: React.FC = () => {
  const setInternalId = useSession(state => state.setUserId)
  const navigate = useNavigate()

  useEffect(() => {
    const tg = window.Telegram?.WebApp
    const user = tg?.initDataUnsafe?.user

    logToVercel('[AUTH] Telegram object: ' + (tg ? '‚úÖ found' : '‚ùå not found'))
    logToVercel('[AUTH] User object: ' + JSON.stringify(user))
    logToVercel('[AUTH] VITE_API_BASE_URL: ' + import.meta.env.VITE_API_BASE_URL)

    if (tg && user) {
      tg.ready()
      tg.expand()

      // –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ API
      createUser({
        telegram_id: user.id,
        username: user.username,
        first_name: user.first_name,
        last_name: user.last_name,
      })
        .then(res => {
          const data: UserOut = res.data
          logToVercel(`[AUTH] createUser response id=${data.id}`)
          // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π UUID –≤ —Å—Ç–æ—Ä–∞–¥–∂
          setInternalId(data.id)
          // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
          navigate('/home')
        })
        .catch(err => {
          logToVercel('[AUTH] createUser error: ' + err.message)
          // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤—Å–µ —Ä–∞–≤–Ω–æ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º (–º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫)
          navigate('/home')
        })
    } else {
      logToVercel('[AUTH] Telegram WebApp or user not available')
      // –ï—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö Telegram, –≤—Å–µ —Ä–∞–≤–Ω–æ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º (–º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å fallback-–ª–æ–≥–∏–∫—É)
      navigate('/home')
    }
  }, [setInternalId, navigate])

  return (
    <div style={{ padding: 20, textAlign: 'center' }}>
      <h2>–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è...</h2>
      <p>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ</p>
    </div>
  )
}

export default Authorize